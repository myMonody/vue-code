{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 拿到数组原型上的方法---原来的方法\nlet oldArrayProtoMethods = Array.prototype;\n\n// 继承一下 arrayMethods.__proto__ = oldArrayProtoMethods;\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\n\nlet methods = [\n   'push',\n   'pop',\n   'shift',\n   'unshift',\n   'sort',\n   'reverse',\n   'splice'\n]\n// 在它上面进行方法的扩展\nmethods.forEach(method => {\n   arrayMethods[method] = function (...args) {\n      // \n      console.log('数组方法调用了');\n      // this就是observe中的value;\n      let result = oldArrayProtoMethods[method].apply(this, args);\n      let inserted;\n      let ob = this.__ob__;\n      switch (method) {\n         case 'push': \n         case 'unshift': // 这两种方法都是追加，追加的内容可能是对象，应该再次被劫持。\n            inserted = args;\n            break;\n         case 'splice': // vue.$set原理。\n            // 就是在第二个index位置进行新增一个，就是splice有3个参数模式\n            inserted = args.slice(2); // arr.splice(0,1,{a:1});\n         default:\n            break;   \n      }\n      if (inserted) ob.observeArray(inserted);\n      return result;\n   }\n})\n","export function proxy(vm, data, key) {\n  Object.defineProperty(vm, key, { // vm.a\n    get() {\n      return vm[data][key]; // vm._data.a;\n    },\n    set(newVal) { // vm.a = 100;\n      vm[data][key] = newVal; // vm._data.a = 100;\n    }\n  })\n}\nexport function defineProperty(target,key,value) {\n   // 判断一个对象是否被观测过，看他是否有__ob__这个属性。\n     Object.defineProperty(target, key, {\n        enumerable: false,// 不能被枚举，不能被循环。就是不能进行再次递归。\n        configurable: false,\n        value\n   })\n}\n","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util\";\n\nclass Observer {\n  constructor(value) {\n    // 使用defineProperty重新定义\n    // console.log(value)\n\n    // 抽取出去\n    defineProperty(value, \"__ob__\", this);\n    //  // 判断一个对象是否被观测过，看他是否有__ob__这个属性。\n    //    Object.defineProperty(value, '__ob__', {\n    //       enumerable: false,// 不能被枚举，不能被循环。就是不能进行再次递归。\n    //       configurable: false,\n    //       value: this\n    //  })\n\n    if (Array.isArray(value)) {\n      // 使用AOP切片进行方法重写。\n      value.__proto__ = arrayMethods;\n\n      // 观测数组中的对象变化\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  observeArray(value) {\n    value.forEach((item) => {\n      observe(item); // 观测数组的对象。\n    });\n  }\n\n  walk(data) {\n    let keys = Object.keys(data); // 获取对象的key\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key]);\n    });\n  }\n}\nfunction defineReactive(data, key, value) {\n  observe(value);\n  Object.defineProperty(data, key, {\n    get() {\n      return value;\n    },\n    set(newVal) {\n      if (newVal == value) return;\n      observe(newVal); // 如果用户将值改成对象，递归设置。\n      value = newVal;\n    },\n  });\n}\nexport function observe(data) {\n  // console.log(data);\n  if (data == null || typeof data !== \"object\") {\n    return data;\n  }\n  if (data.__ob__) return data;\n  return new Observer(data);\n}\n","import { observe } from \"./observer/index\";\nimport { proxy } from \"./util\";\nexport function initState(vm) {\n  // vm.$options\n  // console.log(vm)\n  const options = vm.$options;\n\n  // 初始化数据的过程。\n  if (options.props) {\n    initProps(vm);\n  }\n  if (options.methods) {\n    initMethods(vm);\n  }\n  if (options.data) {\n    initData(vm);\n  }\n  if (options.computed) {\n    initComputed(vm);\n  }\n  if (options.watch) {\n    initWatch(vm);\n  }\n}\nfunction initProps() {}\nfunction initMethods() {}\n\nfunction initData(vm) {\n  // 数据的初始化---这里的数据可能是函数，也可能是属性。\n  let data = vm.$options.data;\n  //  console.log('---', data);\n  // 如果是函数，this指向 vm\n  /*\n   data() {\n      this  ---这里指向的就是vm当前实例。\n      return {\n      \n      }\n   }\n   */\n  // 将数据防止当vm上面，让vm可以拿到data\n\n  vm._data = data = typeof data === \"function\" ? data.call(vm) : data;\n\n  // 当我们去vm上取属性的时候，帮我将属性的取值代理到vm._data上去。\n  for (let key in data) {\n    proxy(vm, \"_data\", key);\n  }\n\n  // 数据的劫持方案---对象Object.defineProperty; 数组--单独处理\n  observe(data);\n}\nfunction initComputed() {}\nfunction initWatch() {}\n","import { initState } from \"./state\";\nexport function initMixin(Vue) {\n  // 初始化方法。---\n  Vue.prototype._init = function (options) {\n    // console.log(options);\n    // 吧options放到实例上去\n    const vm = this;\n    vm.$options = options;\n\n    // vue里面的核心特性-- 响应式数据原理。\n\n    // 初始化状态---将数据进行一个初始化的劫持。当我们改变数据的时候应该更新视图。\n    // vue组件中有很多状态--data props watch computed\n    initState(vm);\n  };\n}\n","// export  const fn = () => {\n// }\n// 使用构造函数来实现\n/*\noptions写法的就是将new Vue({\n   el:'#app',\n   data(){\n   return {\n     a:1\n   }\n   },\n   watch:{} 得的各类参数传递给了 Vue这个构造函数的options中。\n})\n*/\nimport { initMixin } from \"./init\";\nfunction Vue(options) {\n  //   console.log(options)\n  this._init(options); // 入口方法，做初始化操作\n}\n// 写成一个个的插件，对原型进行扩展。\ninitMixin(Vue);\n\nexport default Vue;\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","console","log","result","apply","inserted","ob","__ob__","slice","observeArray","proxy","vm","data","key","defineProperty","get","set","newVal","target","value","enumerable","configurable","Observer","constructor","isArray","__proto__","walk","item","observe","keys","defineReactive","initState","options","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init"],"mappings":"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"}