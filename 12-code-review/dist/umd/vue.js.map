{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/index.js","../../src/index.js"],"sourcesContent":["// 拿到数组原型上的方法---原来的方法\nlet oldArrayProtoMethods = Array.prototype;\n\n// 继承一下 arrayMethods.__proto__ = oldArrayProtoMethods;\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\n\nlet methods = [\n   'push',\n   'pop',\n   'shift',\n   'unshift',\n   'sort',\n   'reverse',\n   'splice'\n]\n// 在它上面进行方法的扩展\nmethods.forEach(method => {\n   arrayMethods[method] = function (...args) {\n      // \n      console.log('数组方法调用了');\n      // this就是observe中的value;\n      let result = oldArrayProtoMethods[method].apply(this, args);\n      let inserted;\n      let ob = this.__ob__;\n      switch (method) {\n         case 'push': \n         case 'unshift': // 这两种方法都是追加，追加的内容可能是对象，应该再次被劫持。\n            inserted = args;\n            break;\n         case 'splice': // vue.$set原理。\n            // 就是在第二个index位置进行新增一个，就是splice有3个参数模式\n            inserted = args.slice(2); // arr.splice(0,1,{a:1});\n         default:\n            break;   \n      }\n      if (inserted) ob.observeArray(inserted);\n      return result;\n   }\n})\n","export function proxy(vm, data, key) {\n  Object.defineProperty(vm, key, { // vm.a\n    get() {\n      return vm[data][key]; // vm._data.a;\n    },\n    set(newVal) { // vm.a = 100;\n      vm[data][key] = newVal; // vm._data.a = 100;\n    }\n  })\n}\nexport function defineProperty(target,key,value) {\n   // 判断一个对象是否被观测过，看他是否有__ob__这个属性。\n     Object.defineProperty(target, key, {\n        enumerable: false,// 不能被枚举，不能被循环。就是不能进行再次递归。\n        configurable: false,\n        value\n   })\n}\n","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util\";\n\nclass Observer {\n  constructor(value) {\n    // 使用defineProperty重新定义\n    // console.log(value)\n\n    // 抽取出去\n    defineProperty(value, \"__ob__\", this);\n    //  // 判断一个对象是否被观测过，看他是否有__ob__这个属性。\n    //    Object.defineProperty(value, '__ob__', {\n    //       enumerable: false,// 不能被枚举，不能被循环。就是不能进行再次递归。\n    //       configurable: false,\n    //       value: this\n    //  })\n\n    if (Array.isArray(value)) {\n      // 使用AOP切片进行方法重写。\n      value.__proto__ = arrayMethods;\n\n      // 观测数组中的对象变化\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  observeArray(value) {\n    value.forEach((item) => {\n      observe(item); // 观测数组的对象。\n    });\n  }\n\n  walk(data) {\n    let keys = Object.keys(data); // 获取对象的key\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key]);\n    });\n  }\n}\nfunction defineReactive(data, key, value) {\n  observe(value);\n  Object.defineProperty(data, key, {\n    get() {\n      return value;\n    },\n    set(newVal) {\n      if (newVal == value) return;\n      observe(newVal); // 如果用户将值改成对象，递归设置。\n      value = newVal;\n    },\n  });\n}\nexport function observe(data) {\n  // console.log(data);\n  if (data == null || typeof data !== \"object\") {\n    return data;\n  }\n  if (data.__ob__) return data;\n  return new Observer(data);\n}\n","import { observe } from \"./observer/index\";\nimport { proxy } from \"./util\";\nexport function initState(vm) {\n  // vm.$options\n  // console.log(vm)\n  const options = vm.$options;\n\n  // 初始化数据的过程。\n  if (options.props) {\n    initProps(vm);\n  }\n  if (options.methods) {\n    initMethods(vm);\n  }\n  if (options.data) {\n    initData(vm);\n  }\n  if (options.computed) {\n    initComputed(vm);\n  }\n  if (options.watch) {\n    initWatch(vm);\n  }\n}\nfunction initProps() {}\nfunction initMethods() {}\n\nfunction initData(vm) {\n  // 数据的初始化---这里的数据可能是函数，也可能是属性。\n  let data = vm.$options.data;\n  //  console.log('---', data);\n  // 如果是函数，this指向 vm\n  /*\n   data() {\n      this  ---这里指向的就是vm当前实例。\n      return {\n      \n      }\n   }\n   */\n  // 将数据防止当vm上面，让vm可以拿到data\n\n  vm._data = data = typeof data === \"function\" ? data.call(vm) : data;\n\n  // 当我们去vm上取属性的时候，帮我将属性的取值代理到vm._data上去。\n  for (let key in data) {\n    proxy(vm, \"_data\", key);\n  }\n\n  // 数据的劫持方案---对象Object.defineProperty; 数组--单独处理\n  observe(data);\n}\nfunction initComputed() {}\nfunction initWatch() {}\n","// <div>hello{{name}}<span>world</span></div>\n\n// {\n//    tag: 'div',\n//       parent: null,\n//       type: 1,\n//       attrs: [],\n//       children: [{\n//          tag: null,\n//          parent: '父div',\n//          attrs: [],\n//          text:hello{{name}}\n//       }]\n// }\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // ?:是找位置匹配\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nexport function parseHTML(html) {\n  function createASTElement (tagName, attrs) {\n    return {\n      tag: tagName, // 标签名\n      type: 1, // 元素类型\n      children: [], // 孩子列表\n      attrs, // 属性集合\n      parent: null, // 父元素\n    }\n  }\n  let root\n  let currentParent\n  let stack = []\n  // 标签是否是符合预期的，<div><spn></div> [] 使用栈结构来处理。[div,span]\n  function start (tagName, attrs) {\n    let element = createASTElement(tagName, attrs)\n    if (!root) {\n      root = element\n    }\n    currentParent = element; // 保存当前解析的标签。\n    stack.push(element); // 存入元素。\n    console.log(tagName, attrs, '----开始标签----')\n  }\n  // <div><p></p>hello</div> [div] currentParent = p\n  function end (tagName) { // 在结尾标签树创建父子关系。\n    // 结束的时候取出栈中的最后一个\n    let element = stack.pop()\n    currentParent = stack[stack.length - 1]; // 依次类推，取出一个，然后倒数一个来补位。\n    if (currentParent) { // 在闭合的时候可以知道这个标签的父亲是谁。\n      element.parent = currentParent\n      currentParent.children.push(element)\n    }\n    console.log(tagName, '----结束标签---')\n  }\n  // 文本\n  function chars (text) {\n    text = text.replace(/\\s/g, '')\n    if (text) {\n      currentParent.children.push({\n        type: 3,\n      text})\n    }\n    console.log(text, '----文本标签----')\n  }\n  while (html) {\n    // 只要不为空就一直执行。\n    let textEnd = html.indexOf('<')\n    if (textEnd === 0) {\n      // v-bind\n      // v-on\n      // <!DOCTYPE\n      // <!--->\n      // <br/> 以上这些的处理，方式类似。\n      // 肯定是标签了。\n      // console.log('开始标签')\n      const startTagMatch = parseStartTag(); // 开始标签匹配的结果。\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue\n      }\n      // 匹配结束标签\n      const endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        advance(endTagMatch[0].length); // 结束标签删掉\n        end(endTagMatch[1]); // 将结束标签传人。\n        continue\n      }\n    // console.log(html)\n    // break\n    }\n    // 再往下走，可讷讷个是文本的。\n    let text\n    if (textEnd >= 0) {\n      text = html.substring(0, textEnd)\n    }\n    if (text) {\n      advance(text.length); // 解析完了之后，删掉文本。\n      chars(text)\n    // console.log(html)\n    }\n  }\n  // 将字符串进行截取操作，再更新html内容。\n  function advance (n) {\n    html = html.substring(n)\n  }\n  function parseStartTag () {\n    const start = html.match(startTagOpen)\n    if (start) {\n      // console.log(start)\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      advance(start[0].length); // 删除开始标签。\n      // 如果直接是闭合标签，说明没有属性。\n      let end\n      let attr\n      // 不是结尾标签，能匹配到属性。\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        advance(attr[0].length)\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5]\n        })\n      }\n      if (end) {\n        // > 把当前的结尾去掉\n        advance(end[0].length)\n        return match\n      }\n    }\n  }\n  return root; // 最后返回树。\n}\n","// <div id=\"app\" style=\"color:red\">hello {{name}} <span>hello</span></div>\n/*\n render() {\n   return _c('div,{id:'app',style:{color:'red}},_v('hello'+_s(name,null,_v('hello'))))\n }\n*/\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nfunction genProps (attrs) {\n  let str = ''\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i]\n    if (attr.name === 'style') {\n      let obj = {}; // 对样式进行键值对特殊化处理。\n      attr.value.split(';').forEach(item => {\n        let [key, value] = item.split(':')\n        obj[key] = value\n      })\n      attr.value = obj\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\n  }\n  return `{${str.slice(0, -1)}}`\n}\nfunction gen (node) {\n  if (node.type === 1) {\n    return generate(node); // 生成元素节点的字符串\n  } else {\n    let text = node.text; // 获取文本\n    // 如果是普通文本， 不带{{}}  _v(hello) v('hello'+_s(name,null,_v('hello'))\n    if (!defaultTagRE.test(text)) { // 看文本是否支持大括号\n      return `_v(${JSON.stringify(text)})`\n    }\n    let tokens = []; // 存放每一段的代码\n    let lastIndex = defaultTagRE.lastIndex = 0; // 如果正则是全局模式，使用前需要先设置为0；\n    let match,index; // 每次匹配到的结果\n    while (match = defaultTagRE.exec(text)) {\n      index = match.index; // 保存匹配到的索引\n      if (index > lastIndex) {\n        tokens.push(\n          JSON.stringify(text.slice(lastIndex, index))\n        )\n      }\n       tokens.push(`_s(${match[1].trim()})`);\n       lastIndex = index + match[0].length;\n    }\n     if (lastIndex < text.length) {\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\n     }\n     return `_v(${tokens.join('+')})`\n  }\n}\nfunction getChildren (el) {\n  const children = el.children\n  if (children) { // 将所有转化后的儿子用逗号拼接起来。\n    return children.map(child => gen(child)).join(',')\n  }\n}\nexport function generate (el) {\n  let children = getChildren(el); // 儿子生成的\n  let code = `_c('${el.tag}',${el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'\n     }${\n     children?`,${children}`:''\n      })`\n\n  return code\n}\n","import { parseHTML } from './parse'\nimport { generate } from './generate'\nexport function compilerToFunction (template) {\n  // console.log(template); 虚拟dom是用对象来描述节点，不同于ast。\n  // html模板---》render函数。 ast语法树。\n  // 1,将html代码转化成ast语法树，可以用ast树来描述语言本身。\n\n  // 前端必须要掌握的数据结构--树\n  let ast = parseHTML(template)\n  console.log(ast)\n  // return function () {}\n  // 2,通过这棵树重新生成代码。 ast用来描述代码的。\n\n  // 2, 优化静态节点\n\n  // 3,生成树---将ast树重新生成代码。\n  let code = generate(ast)\n\n  // 4,第四步骤，将字符串转化为函数。\n  // console.log(code); \n  // 限制取值范围，通过with来进行取值 稍后调用render函数可以通过改变this 让这个函数内部取到结果\n  let render = new Function(`with(this){return ${code}}`)\n  // console.log(render)\n  return render\n}\n// with这里是包裹变量。\n","export function patch(oldVnode, vnode) {\n  // 将虚拟节点转化为真实节点---递归创建元素的过程\n  console.log(\"---path--\", oldVnode, vnode); // 这里oldVnode就是我们原来的#app所在的节点。\n  let el = createElm(vnode); // 产生真实的dom\n  let parentElm = oldVnode.parentNode;\n  // 然后塞进去新的节点\n  parentElm.insertBefore(el, oldVnode.nextSibling); // 插入到下一个元素的前面去。\n  parentElm.removeChild(oldVnode); // 删除老的节点\n}\nfunction createElm(vnode) {\n  let { tag, children, key, data, text } = vnode;\n  if (typeof tag == \"string\") {\n    // 创建元素 放到vnode.el上面去\n    vnode.el = document.createElement(tag);\n\n    // 只有元素才有属性--\n    updateProperties(vnode);\n\n    // 渲染children。将children塞到vnode的el上面去。\n    children.forEach((child) => {\n      // 遍历儿子 将儿子渲染后的结果扔到父级\n      vnode.el.appendChild(createElm(child));\n    });\n  } else {\n    // 创建文本 放到vnode的el上面去。\n    vnode.el = document.createTextNode(text);\n  }\n  return vnode.el;\n}\n\nfunction updateProperties(vnode) {\n  let el = vnode.el;\n  let newProps = vnode.data || {};\n  for (let key in newProps) {\n    if (key === \"style\") {\n      // {color:red}\n      for (let styleName in newProps.style) {\n        el.style[styleName] = newProps.style[styleName];\n      }\n    } else if (key === \"class\") {\n      el.className = el.class;\n    } else {\n      el.setAttribute(key, newProps[key]);\n    }\n  }\n}\n\n/* !!!!!!!!! 初步渲染的流程--> 后面还有数据的同步更新。\nvue的渲染流程：\n1--先初始化数据-->\n2--将模板编译成ast语法树-->\n3--render函数--->\n4--生成虚拟dom节点(描述dom的一个对象)--->\n5--生成真实的dom(patch方法调用)--->\n6--扔到页面上去\n*/\n","import {patch} from './vdom/patch'\nexport function lifecycleMixin(Vue) {\n   Vue.prototype._update = function (vnode) {\n      const vm = this;\n      patch(vm.$el, vnode);\n   }\n}\n\nexport function mountComponent(vm, el) {\n   // 调用render方法去渲染 el属性。\n\n   // 先调用render方法创建虚拟节点，在将虚拟节渲染到页面中去。\n   // !!! 核心逻辑---是先调用render方法转化为虚拟dom，然后再调用update方法转化为真实的dom;\n   vm._update(vm._render());\n}","import { initState } from \"./state\";\nimport { compilerToFunction } from './compiler/index'\nimport { mountComponent } from './lifecycle';\nexport function initMixin(Vue) {\n  // 初始化方法。---\n  Vue.prototype._init = function (options) {\n    // console.log(options);\n    // 吧options放到实例上去\n    const vm = this;\n    vm.$options = options;\n\n    // vue里面的核心特性-- 响应式数据原理。\n\n    // 初始化状态---将数据进行一个初始化的劫持。当我们改变数据的时候应该更新视图。\n    // vue组件中有很多状态--data props watch computed\n    initState(vm);\n\n\n    // (如果当前有el属性说明要渲染模板\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n  Vue.prototype.$mount = function (el) {\n// 做挂载操作的\n    const vm = this;\n    el = document.querySelector(el);\n    vm.$el = el;\n    // console.log(el);\n    const options = vm.$options; \n    if (!options.render) {\n       // 没有render方法，将template转化为render方法。\n      let template = options.template;\n      if (!template && el) {\n        // 如果没有template，有el,此时就是拿到所有的html结构了。\n        template = el.outerHTML;\n\n      }\n      // console.log(template);\n      // 然后要做的事件是---把我们的模板编译成render\n      const render = compilerToFunction(template);\n      options.render = render; // 拿到render后给到options，到处都可以拿到次render方法了\n    } \n\n    // 渲染的时候用的都是这个render方法\n\n    // 需要挂载这个组件。\n    mountComponent(vm,el);\n  }\n}\n","export function renderMixin (Vue) {\n  Vue.prototype._c = function () { // 创建元素\n    return createElement(...arguments); // 创建虚拟dom\n  }\n  Vue.prototype._s = function (val) { // stringify\n    return val == null ? '' : (typeof val == 'object' ? JSON.stringify(val) : val)\n  }\n  Vue.prototype._v = function (text) { // 创建文本元素。\n    return createTextVnode(text)\n  }\n  Vue.prototype._render = function () {\n    const vm = this\n    // 调用我们之前的render方法。\n    const render = vm.$options.render\n     let vnode = render.call(vm)\n   //   console.log('===', vnode);\n    return vnode\n  }\n}\n\nfunction createElement (tag, data = {} , ...children) {\n  //   console.log(arguments)\n  return vnode(tag, data, data.key, children)\n}\nfunction createTextVnode (text) {\n  //   console.log(text, '----text')\n  return vnode(undefined, undefined, undefined, undefined, text)\n}\n// 用来产生虚拟dom的\nfunction vnode (tag, data, key, children, text) {\n  return {\n    tag,\n    data,\n    key,\n    children,\n  text}\n}\n","// export  const fn = () => {\n// }\n// 使用构造函数来实现\n/*\noptions写法的就是将new Vue({\n   el:'#app',\n   data(){\n   return {\n     a:1\n   }\n   },\n   watch:{} 得的各类参数传递给了 Vue这个构造函数的options中。\n})\n*/\nimport { initMixin } from \"./init\";\nimport { lifecycleMixin } from './lifecycle'\nimport {renderMixin} from './vdom/index'\nfunction Vue(options) {\n  //   console.log(options)\n  this._init(options); // 入口方法，做初始化操作\n}\n// 写成一个个的插件，对原型进行扩展。\ninitMixin(Vue);\n\nlifecycleMixin(Vue); // 混合生命周期  渲染--扩展的update方法。\n\nrenderMixin(Vue); // 扩展的render方法\n\n\nexport default Vue;\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","console","log","result","apply","inserted","ob","__ob__","slice","observeArray","proxy","vm","data","key","defineProperty","get","set","newVal","target","value","enumerable","configurable","Observer","constructor","isArray","__proto__","walk","item","observe","keys","defineReactive","initState","options","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","tagName","attrs","tag","type","children","parent","root","currentParent","stack","start","element","push","end","pop","length","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","i","obj","split","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","trim","join","getChildren","el","map","child","code","compilerToFunction","template","ast","render","Function","patch","oldVnode","vnode","createElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","class","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","_render","initMixin","_init","$mount","querySelector","outerHTML","renderMixin","_c","arguments","_s","val","_v","createTextVnode","undefined"],"mappings":"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"}