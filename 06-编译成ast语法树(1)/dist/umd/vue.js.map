{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 拿到数组原型上的方法---原来的方法\nlet oldArrayProtoMethods = Array.prototype;\n\n// 继承一下 arrayMethods.__proto__ = oldArrayProtoMethods;\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\n\nlet methods = [\n   'push',\n   'pop',\n   'shift',\n   'unshift',\n   'sort',\n   'reverse',\n   'splice'\n]\n// 在它上面进行方法的扩展\nmethods.forEach(method => {\n   arrayMethods[method] = function (...args) {\n      // \n      console.log('数组方法调用了');\n      // this就是observe中的value;\n      let result = oldArrayProtoMethods[method].apply(this, args);\n      let inserted;\n      let ob = this.__ob__;\n      switch (method) {\n         case 'push': \n         case 'unshift': // 这两种方法都是追加，追加的内容可能是对象，应该再次被劫持。\n            inserted = args;\n            break;\n         case 'splice': // vue.$set原理。\n            // 就是在第二个index位置进行新增一个，就是splice有3个参数模式\n            inserted = args.slice(2); // arr.splice(0,1,{a:1});\n         default:\n            break;   \n      }\n      if (inserted) ob.observeArray(inserted);\n      return result;\n   }\n})\n","export function proxy(vm, data, key) {\n  Object.defineProperty(vm, key, { // vm.a\n    get() {\n      return vm[data][key]; // vm._data.a;\n    },\n    set(newVal) { // vm.a = 100;\n      vm[data][key] = newVal; // vm._data.a = 100;\n    }\n  })\n}\nexport function defineProperty(target,key,value) {\n   // 判断一个对象是否被观测过，看他是否有__ob__这个属性。\n     Object.defineProperty(target, key, {\n        enumerable: false,// 不能被枚举，不能被循环。就是不能进行再次递归。\n        configurable: false,\n        value\n   })\n}\n","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util\";\n\nclass Observer {\n  constructor(value) {\n    // 使用defineProperty重新定义\n    // console.log(value)\n\n    // 抽取出去\n    defineProperty(value, \"__ob__\", this);\n    //  // 判断一个对象是否被观测过，看他是否有__ob__这个属性。\n    //    Object.defineProperty(value, '__ob__', {\n    //       enumerable: false,// 不能被枚举，不能被循环。就是不能进行再次递归。\n    //       configurable: false,\n    //       value: this\n    //  })\n\n    if (Array.isArray(value)) {\n      // 使用AOP切片进行方法重写。\n      value.__proto__ = arrayMethods;\n\n      // 观测数组中的对象变化\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  observeArray(value) {\n    value.forEach((item) => {\n      observe(item); // 观测数组的对象。\n    });\n  }\n\n  walk(data) {\n    let keys = Object.keys(data); // 获取对象的key\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key]);\n    });\n  }\n}\nfunction defineReactive(data, key, value) {\n  observe(value);\n  Object.defineProperty(data, key, {\n    get() {\n      return value;\n    },\n    set(newVal) {\n      if (newVal == value) return;\n      observe(newVal); // 如果用户将值改成对象，递归设置。\n      value = newVal;\n    },\n  });\n}\nexport function observe(data) {\n  // console.log(data);\n  if (data == null || typeof data !== \"object\") {\n    return data;\n  }\n  if (data.__ob__) return data;\n  return new Observer(data);\n}\n","import { observe } from \"./observer/index\";\nimport { proxy } from \"./util\";\nexport function initState(vm) {\n  // vm.$options\n  // console.log(vm)\n  const options = vm.$options;\n\n  // 初始化数据的过程。\n  if (options.props) {\n    initProps(vm);\n  }\n  if (options.methods) {\n    initMethods(vm);\n  }\n  if (options.data) {\n    initData(vm);\n  }\n  if (options.computed) {\n    initComputed(vm);\n  }\n  if (options.watch) {\n    initWatch(vm);\n  }\n}\nfunction initProps() {}\nfunction initMethods() {}\n\nfunction initData(vm) {\n  // 数据的初始化---这里的数据可能是函数，也可能是属性。\n  let data = vm.$options.data;\n  //  console.log('---', data);\n  // 如果是函数，this指向 vm\n  /*\n   data() {\n      this  ---这里指向的就是vm当前实例。\n      return {\n      \n      }\n   }\n   */\n  // 将数据防止当vm上面，让vm可以拿到data\n\n  vm._data = data = typeof data === \"function\" ? data.call(vm) : data;\n\n  // 当我们去vm上取属性的时候，帮我将属性的取值代理到vm._data上去。\n  for (let key in data) {\n    proxy(vm, \"_data\", key);\n  }\n\n  // 数据的劫持方案---对象Object.defineProperty; 数组--单独处理\n  observe(data);\n}\nfunction initComputed() {}\nfunction initWatch() {}\n","// <div>hello{{name}}<span>world</span></div>\n\n// {\n//    tag: 'div',\n//       parent: null,\n//       type: 1,\n//       attrs: [],\n//       children: [{\n//          tag: null,\n//          parent: '父div',\n//          attrs: [],\n//          text:hello{{name}}\n//       }]\n// }\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // ?:是找位置匹配\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nfunction start (tagName, attrs) {}\nfunction end (tagName) {}\n// 文本\nfunction chars (text) {}\nfunction parseHTML (html) {\n  while (html) {\n    // 只要不为空就一直执行。\n    let textEnd = html.indexOf('<')\n    if (textEnd === 0) {\n      // 肯定是标签了。\n      // console.log('开始标签')\n       const startTagMatch = parseStartTag() // 开始标签匹配的结果。\n       \n       if (startTagMatch) {\n          start(startTagMatch.tagName, startTagMatch.attrs);\n       }\n       console.log(html)\n      break\n    }\n  }\n  // 将字符串进行截取操作，再更新html内容。\n  function advance (n) {\n    html = html.substring(n)\n  }\n  function parseStartTag () {\n    const start = html.match(startTagOpen)\n    if (start) {\n      // console.log(start)\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      advance(start[0].length); // 删除开始标签。\n      // 如果直接是闭合标签，说明没有属性。\n      let end\n      let attr\n      // 不是结尾标签，能匹配到属性。\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5]\n        })\n        // console.log(match)\n        // 去掉当前属性\n        advance(attr[0].length)\n      //   break\n      }\n      if (end) { // > 把当前的结尾去掉\n        advance(end[0].length)\n        return match\n      }\n    }\n  }\n}\n\nexport function compilerToFunction (template) {\n  // console.log(template); 虚拟dom是用对象来描述节点，不同于ast。\n  // html模板---》render函数。 ast语法树。\n  // 1,将html代码转化成ast语法树，可以用ast树来描述语言本身。\n\n  // 前端必须要掌握的数据结构--树\n  let ast = parseHTML(template)\n\n// 2,通过这棵树重新生成代码。 ast用来描述代码的。\n}\n","import { initState } from \"./state\";\nimport {compilerToFunction} from './compiler/index'\nexport function initMixin(Vue) {\n  // 初始化方法。---\n  Vue.prototype._init = function (options) {\n    // console.log(options);\n    // 吧options放到实例上去\n    const vm = this;\n    vm.$options = options;\n\n    // vue里面的核心特性-- 响应式数据原理。\n\n    // 初始化状态---将数据进行一个初始化的劫持。当我们改变数据的时候应该更新视图。\n    // vue组件中有很多状态--data props watch computed\n    initState(vm);\n\n\n    // (如果当前有el属性说明要渲染模板\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n  Vue.prototype.$mount = function (el) {\n// 做挂载操作的\n    const vm = this;\n    el = document.querySelector(el);\n    // console.log(el);\n    const options = vm.$options; \n    if (!options.render) {\n       // 没有render方法，将template转化为render方法。\n      let template = options.template;\n      if (!template && el) {\n        // 如果没有template，有el,此时就是拿到所有的html结构了。\n        template = el.outerHTML;\n\n      }\n      // console.log(template);\n      // 然后要做的事件是---把我们的模板编译成render\n      const render = compilerToFunction(template);\n      options.render = render; // 拿到render后给到options，到处都可以拿到次render方法了\n    } else {\n      \n    }\n  }\n}\n","// export  const fn = () => {\n// }\n// 使用构造函数来实现\n/*\noptions写法的就是将new Vue({\n   el:'#app',\n   data(){\n   return {\n     a:1\n   }\n   },\n   watch:{} 得的各类参数传递给了 Vue这个构造函数的options中。\n})\n*/\nimport { initMixin } from \"./init\";\nfunction Vue(options) {\n  //   console.log(options)\n  this._init(options); // 入口方法，做初始化操作\n}\n// 写成一个个的插件，对原型进行扩展。\ninitMixin(Vue);\n\nexport default Vue;\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","console","log","result","apply","inserted","ob","__ob__","slice","observeArray","proxy","vm","data","key","defineProperty","get","set","newVal","target","value","enumerable","configurable","Observer","constructor","isArray","__proto__","walk","item","observe","keys","defineReactive","initState","options","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","attribute","startTagClose","start","tagName","attrs","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","advance","n","substring","match","length","end","attr","push","name","compilerToFunction","template","ast","initMixin","Vue","_init","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}